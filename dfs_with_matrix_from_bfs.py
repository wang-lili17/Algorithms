# -*- coding: utf-8 -*-
"""DFS with matrix from BFS.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1TuvwQP3AJ4oLYedmJPsMDdKj8rxO-88R
"""

A=[[0,0,0,0,0,0,0,1,0,1,0,1,0],
   [0,0,0,0,0,0,0,0,1,0,1,0,0],
   [0,0,0,1,0,0,0,0,0,0,0,0,1],
   [0,0,1,0,1,0,0,1,0,0,0,0,0],
   [0,0,0,1,0,0,0,0,0,0,0,0,0],
   [0,0,0,0,0,0,0,1,0,0,0,0,0],
   [0,0,0,0,0,1,0,1,0,0,0,0,0],
   [1,0,0,1,0,0,1,0,0,0,0,1,0],
   [0,1,0,0,0,0,0,0,0,1,0,0,1],
   [1,0,0,0,0,0,0,0,1,0,1,0,0],
   [0,1,0,0,0,0,0,0,0,1,0,0,0],
   [1,0,0,0,0,0,0,1,0,0,0,0,0],
   [0,0,1,0,0,0,0,0,1,0,0,0,0]
   ]

def DFS(A,start):
  visited=[False]*len(A)
  visited[start]=True
  stack=[start]

  while stack:
    current=stack.pop()
    print(current,end=' ')

    for neighbor in range(len(A[current])):
      if A[current][neighbor]==1 and not visited[neighbor]:
        visited[neighbor]=True
        stack.append(neighbor)

DFS(A,4)